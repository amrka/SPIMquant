from snakebids import bids, generate_inputs, get_wildcard_constraints, set_bids_spec
from snakemake.utils import format

set_bids_spec("v0_11_0")


configfile: "config/snakebids.yml"


# use expandvars so we can use e.g. '$SLURM_TMPDIR'
root = os.path.expandvars(config["root"])
work = os.path.expandvars(config["work"])


# Get input wildcards
inputs = generate_inputs(
    bids_dir=config["bids_dir"],
    pybids_inputs=config["pybids_inputs"],
    pybidsdb_dir=config.get("pybidsdb_dir"),
    pybidsdb_reset=config.get("pybidsdb_reset"),
    derivatives=config.get("derivatives", None),
    participant_label=config.get("participant_label", None),
    exclude_participant_label=config.get("exclude_participant_label", None),
    validate=not config.get("plugins.validator.skip", False),
)

root = "results"


container: config["containers"]["spimprep"]


rule all_atlasreg_deform_zooms:
    input:
        spim_zoomed=inputs["spim"]
            .expand(
                bids(
                    root=root,
                    datatype="micr",
                    desc="deform",
                    space="{template}",
                    stain="{stain}",
                    res="{res}um",
                    suffix="SPIM.nii",
                    **inputs["spim"].wildcards
                ),
                template=config['templates'],
                stain=config['stains'],
                res=config['atlasreg']['zooms'],
            ),

rule all_blobs:
    input:
        spim_zoomed=inputs["spim"]
            .expand(bids(
            root=root,
            datatype="micr",
            stain="{stain}",
            suffix="blobs.npy",
            **inputs["spim"].wildcards
        ),
        stain=config['stains']
        )

rule all_atlasreg_deform:
    input:
        spim=inputs["spim"]
            .expand(
                bids(
                    root=root,
                    datatype="micr",
                    desc="deform",
                    space="{template}",
                    stain="{stain}",
                    suffix="SPIM.nii",
                    **inputs["spim"].wildcards
                ),
                template=config['templates'],
                stain=config['stains'],
            )

rule all_atlasreg_lbl:
    input:
        dseg=inputs["spim"]
            .expand(
                bids(
                    root=root,
                    datatype="micr",
                    desc="resampled",
                    from_="{template}",
                    suffix="dseg.ome.zarr.zip",
                    **inputs["spim"].wildcards
                ),
                template=config['templates'],
            )

include: "rules/common.smk"
include: "rules/import.smk"
include: "rules/masking.smk"
include: "rules/atlasreg.smk"
include: "rules/celldetect.smk"
