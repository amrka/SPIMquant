from snakebids import bids, generate_inputs, get_wildcard_constraints, set_bids_spec

set_bids_spec("v0_11_0")


configfile: "config/snakebids.yml"


# use expandvars so we can use e.g. '$SLURM_TMPDIR'
root = os.path.expandvars(config["root"])
work = os.path.expandvars(config["work"])


# Get input wildcards
inputs = generate_inputs(
    bids_dir=config["bids_dir"],
    pybids_inputs=config["pybids_inputs"],
    pybidsdb_dir=config.get("pybidsdb_dir"),
    pybidsdb_reset=config.get("pybidsdb_reset"),
    derivatives=config.get("derivatives", None),
    participant_label=config.get("participant_label", None),
    exclude_participant_label=config.get("exclude_participant_label", None),
    validate=not config.get("plugins.validator.skip", False),
)

root = "results"


container: config["containers"]["spimprep"]


rule all_atlasreg:
    input:
        dseg=inputs["spim"]
            .filter(stain="autof")
            .expand(
                bids(
                    root=root,
                    datatype="micr",
                    desc="resampled",
                    from_="{template}",
                    suffix="dseg.ome.zarr.zip",
                    **inputs["spim"].wildcards
                ),
                template="ABAv3",
            ),
        spim=inputs["spim"]
            .expand(
                bids(
                    root=root,
                    datatype="micr",
                    desc="resampled",
                    space="{template}",
                    stain="{stain}",
                    suffix="spim.nii",
                    **inputs["spim"].wildcards
                ),
                template="ABAv3",
                stain=['autof','abeta'],
            ),


include: "rules/common.smk"
include: "rules/atlasreg.smk"
